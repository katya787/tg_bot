import telebot 
from telebot.types import Message 
import random 
from random import choice

bot = telebot.TeleBot('')


@bot.message_handler(commands=['start'])
def start_cmd(message: Message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç(‚à©‚ñÇ‚à©)')

@bot.message_handler(commands=['coin'])
def coin_cmd(message: Message):
    x = random.randint(0,1)
    if x == 0:
        bot.reply_to(message, '–í–∞–º –≤—ã–ø–∞–ª –æ—Ä—ë–ª!')
    else:
        bot.reply_to(message, '–í–∞–º –≤—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞!')

@bot.message_handler(commands=['bye'])
def bye_cmd(message: Message):
    bot.send_message(message.chat.id, '–ü–æ–∫–∞! –≤—Å–µ–≥–¥–∞ –±—É–¥—É —Ä–∞–¥ —Ç–µ–±–µ (‚à©Ô∏µ‚à©)')

@bot.message_handler(commands=['emoji'])
def emoji_cmd(message: Message):
    custom_emojis = ["¬Ø_(„ÉÑ)_/¬Ø", "(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª", "‡≤†_‡≤†", "(¬¨‚Äø¬¨)", "(‡∏á'ÃÄ-'ÃÅ)‡∏á", " ï‚Ä¢·¥•‚Ä¢ î", "( ‚Ä¢_‚Ä¢)>‚åê‚ñ†-‚ñ†", "(‚åê‚ñ†_‚ñ†)", " (‚ó£_‚ó¢) ", "(~Ôø£‚ñΩÔø£)~", "(‚úø ‚ô•‚Äø‚ô•)", "Ÿ©(Õ°‡πèÃØÕ°‡πè)€∂", "(‚ïØÔ∏µ‚ï∞,)", "(‚ïØ‡≤ä‚ï∞)", "Ÿ©(Ãæ‚óèÃÆÃÆÃÉÃæ‚Ä¢ÃÉÃæ)€∂"]
    em = random.choice(custom_emojis)
    bot.send_message(message.chat.id, em)   

@bot.message_handler(commands=['gen_pass'])
def gen_pass_cmd(message: Message):
    number = '1234567890'
    sogl = 'QWRTPSDFGHJKLZXCVBNMqwrtpsdfghjlkzxcvbnm'
    glas = 'EYUIOAeyuoai'
    symbols = '!@#$%^&*-=_+'
    password = ''
    for i in range(4):
        password += choice(sogl) + choice(glas)
    for i in range(5):
        password += choice(number)
    for i in range(3):
        password += choice(symbols)  
    bot.reply_to(message, password)

@bot.message_handler(commands=['knb'])
def knb_cmd(message: Message):
    bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞(—á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É)')
    bot.register_next_step_handler(message, knb_game)

def knb_game(message: Message):
    text = message.text.lower()
    if text == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã')
        return
    if text not in['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞']:
        bot.send_message(message.chat.id, '–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –∏–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã')
        return
    comp = random.choice(['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞'])
    if text == comp:
        bot.send_message(message.chat.id,'–ù–∏—á—å—è, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /knb')
        return
    elif (text == '–∫–∞–º–µ–Ω—å' and bot == '–Ω–æ–∂–Ω–∏—Ü—ã') or (text == '–Ω–æ–∂–Ω–∏—Ü—ã' and bot == '–±—É–º–∞–≥–∞') or (text == '–±—É–º–∞–≥–∞' and bot == '–∫–∞–º–µ–Ω—å'):
        bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /knb")
        return
    else:
        bot.send_message(message.chat.id, '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å—Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /knb')
        return



@bot.message_handler(commands=['door'])
def door_cmd(message: Message):
    bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å, –Ω–∞–ø–∏—à–∏—Ç–µ –ø–µ—Ä–≤–∞—è/–≤—Ç–æ—Ä–∞—è/—Ç—Ä–µ—Ç—å—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∞(—á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É)')
    bot.register_next_step_handler(message, door_game)

def door_game(message: Message):
    text = message.text.lower()
    if text == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã')
        return
    if text not in['–ø–µ—Ä–≤–∞—è', '–≤—Ç–æ—Ä–∞—è', '—Ç—Ä–µ—Ç—å—è']:
        bot.send_message(message.chat.id, '–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, –∏–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤–∞–º —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã')
        return
    comp = random.choice(['–ø–µ—Ä–≤–∞—è', '–≤—Ç–æ—Ä–∞—è', '—Ç—Ä–µ—Ç—å—è'])
    if text == comp:
        bot.send_message(message.chat.id,'–û—Ç–∫—Ä—ã–≤–∞—è –¥–≤–µ—Ä—å –≤—ã –Ω–∞—à–ª–∏ —Å–æ–∫—Ä–æ–≤–∏—â–∞,–ø–æ–∑–¥—Ä–∞–≤–ª—è—é üéâ! –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /door')
        return
    elif text != comp:
        bot.send_message(message.chat.id, '–ö–æ–≥–¥–∞ –≤—ã –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ –¥–≤–µ—Ä—å –ø–æ–ª –æ–±—Ä—É—à–∏–ª—Å—è, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ Ÿ©(√óÃØ√ó)€∂. –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /door')
        return
    



@bot.message_handler(commands=['help'])
def help_cmd(message: Message):
    text = "<b>–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:</b>\n /start - <i>–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞</i>\n /coin - <i>–º–æ–Ω–µ—Ç–∫–∞</i>\n /help - <i>–≤—Å–µ –∫–æ–º–∞–Ω–¥—ã</i>\n /bye - <i>–±–æ—Ç –ø–æ–ø—Ä–æ—â–∞–µ—Ç—Å—è</i>\n /emoji - <i>—Ä–∞–Ω–¥–æ–º–Ω—ã–π —ç–º–æ–¥–∂–∏</i>\n /gen_pass - <i>–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è</i>\n /knb - <i>–∏–≥—Ä–∞ –∫–Ω–±</i>\n /door - <i>–∏–≥—Ä–∞ –¥–≤–µ—Ä–∏</i>"
    bot.send_message(message.chat.id, text, parse_mode = 'html')
   

@bot.message_handler(func=lambda message: message.text == '–ü—Ä–∏–≤–µ—Ç')
def hello_text(message: Message):
    bot.send_message(message.chat.id, '–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç (‚à©Ô∏µ‚à©)')
 
@bot.message_handler(func=lambda message: message.text == '–ö–∞–∫ –¥–µ–ª–∞?')
def hay_text(message: Message):
    bot.send_message(message.chat.id, '–õ—É—á—à–µ –Ω–µ –±—ã–≤–∞–µ—Ç (ÔΩ°‚óï‚Äø‚óïÔΩ°)')



bot.infinity_polling()





